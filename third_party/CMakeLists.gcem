cmake_minimum_required(VERSION 3.16.0)

set(GCEM_INCLUDE_DIR ${CMAKE_CURRENT_LIST_DIR}/include)

#

file(STRINGS "${GCEM_INCLUDE_DIR}/gcem_incl/gcem_options.hpp" gcem_version_defines
    REGEX "#define GCEM_VERSION_(MAJOR|MINOR|PATCH)")

foreach(ver ${gcem_version_defines})
    if(ver MATCHES "#define GCEM_VERSION_(MAJOR|MINOR|PATCH) +([^ ]+)$")
        set(GCEM_VERSION_${CMAKE_MATCH_1} "${CMAKE_MATCH_2}" CACHE INTERNAL "")
    endif()
endforeach()

# for desktop
if(NOT CM_PLATFORM )

    project(gcem)
    
    set(${PROJECT_NAME}_VERSION
    ${GCEM_VERSION_MAJOR}.${GCEM_VERSION_MINOR}.${GCEM_VERSION_PATCH})
    message(STATUS "GCE-Math version ${${PROJECT_NAME}_VERSION}")

    add_library(gcem INTERFACE)
    target_include_directories(gcem INTERFACE $<BUILD_INTERFACE:${GCEM_INCLUDE_DIR}>
                                                $<INSTALL_INTERFACE:include>)

    include(CMakePackageConfigHelpers)
    include(GNUInstallDirs)
    
    install(
        TARGETS gcem
        EXPORT ${PROJECT_NAME}-targets
    )
    
    export(EXPORT ${PROJECT_NAME}-targets
        FILE "${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}Targets.cmake")
    
    install(DIRECTORY ${GCEM_INCLUDE_DIR}/
            DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})
    
    set(GCEM_CMAKECONFIG_INSTALL_DIR "${CMAKE_INSTALL_LIBDIR}/cmake/${PROJECT_NAME}" CACHE STRING "install path for gcemConfig.cmake")
    
    configure_package_config_file(cmake_files/${PROJECT_NAME}Config.cmake.in
                                "${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}Config.cmake"
                                INSTALL_DESTINATION ${GCEM_CMAKECONFIG_INSTALL_DIR})
    
    write_basic_package_version_file(${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}ConfigVersion.cmake
                                    VERSION ${${PROJECT_NAME}_VERSION}
                                    COMPATIBILITY SameMajorVersion)
    
    install(FILES ${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}Config.cmake
                ${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}ConfigVersion.cmake
            DESTINATION ${GCEM_CMAKECONFIG_INSTALL_DIR})
    
    install(EXPORT ${PROJECT_NAME}-targets
            FILE ${PROJECT_NAME}Targets.cmake
            DESTINATION ${GCEM_CMAKECONFIG_INSTALL_DIR})

else()
    idf_build_get_property(CM_PLATFORM CM_PLATFORM)
    if(CM_PLATFORM STREQUAL "ESP32")
        #project(gcem LANGUAGES CXX)
        #idf_component_register(INCLUDE_DIRS ${GCEM_INCLUDE_DIR})
        add_library(gcem INTERFACE)
    else()
        #ERROR
        message(SEND_ERROR "You must specify the CMAKE platform!")
    endif()
endif()
